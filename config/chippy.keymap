/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>


#define BASE    0
#define LOWER   1
#define RAISE   2
#define ADJUST  3
#define MOUSE   4

#define LT0  5  // left-top row
#define LT1  4
#define LT2  3
#define LT3  2
#define LT4  1
#define LT5  0

#define RT0  6  // right-top row
#define RT1  7
#define RT2  8
#define RT3  9
#define RT4 10
#define RT5 11

#define LM0 17  // left-middle row
#define LM1 16
#define LM2 15
#define LM3 14
#define LM4 13
#define LM5 12

#define RM0 18  // right-middle row
#define RM1 19
#define RM2 20
#define RM3 21
#define RM4 22
#define RM5 23

#define LB0 29  // left-bottom row
#define LB1 28
#define LB2 27
#define LB3 26
#define LB4 25
#define LB5 24

#define RB0 30  // right-bottom row
#define RB1 31
#define RB2 32
#define RB3 33
#define RB4 34
#define RB5 35

#define LH0 38  // left thumb keys
#define LH1 37
#define LH2 36

#define RH0 39  // right thumb keys
#define RH1 40
#define RH2 41


/ {
        conditional_layers {
                compatible = "zmk,conditional-layers";
                        tri_layer {
                        if-layers = <LOWER RAISE>;
                        then-layer = <ADJUST>;
                };
        };

        macros {
                ZMK_MACRO(switch_to_mac, bindings= <&bt BT_SEL 0>;)
                ZMK_MACRO(switch_to_ipad, bindings= <&bt BT_SEL 2>;)
                ZMK_MACRO(switch_to_windows, bindings= <&bt BT_SEL 1>;)

                win_app_sw: win_app_sw {
                        label = "WINDOWS_APP_SWITCHER";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LALT>
                                , <&macro_tap &kp TAB>
                                , <&macro_press &mo LOWER>
                                , <&macro_pause_for_release>
                                , <&macro_release &mo LOWER>
                                , <&macro_release &kp LALT>
                                ;
                };     

                mac_app_sw: mac_app_sw {
                        label = "MAC_APP_SWITCHER";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LGUI>
                                , <&macro_tap &kp TAB>
                                , <&macro_press &mo LOWER>
                                , <&macro_pause_for_release>
                                , <&macro_release &mo LOWER>
                                , <&macro_release &kp LGUI>
                                ;
                };  
        };

        combos {
                compatible = "zmk,combos";
                combo_spotlight {         
                        timeout-ms = <20>;
                        key-positions = <LH0 RH0>;
                        bindings = <&kp LG(SPACE)>;
                };

                combo_app_switcher {         
                        timeout-ms = <20>;
                        key-positions = <LM4 LM3 LM2 LM1>;
                        bindings = <&kp LG(TAB)>;
                };

                combo_copy {         
                        timeout-ms = <20>;
                        key-positions = <LB3 LB2>;
                        bindings = <&kp LG(C)>;
                };
                combo_paste {         
                        timeout-ms = <20>;
                        key-positions = <LB2 LB1>;
                        bindings = <&kp LG(V)>;
                };
                combo_cut {         
                        timeout-ms = <20>;
                        key-positions = <LB3 LB1>;
                        bindings = <&kp LG(X)>;
                };
                combo_undo {         
                        timeout-ms = <20>;
                        key-positions = <LB4 LB3>;
                        bindings = <&kp LG(Z)>;
                };
                combo_select_all {         
                        timeout-ms = <20>;
                        key-positions = <LM4 LM1>;
                        bindings = <&kp LG(A)>;
                };
                combo_save {         
                        timeout-ms = <20>;
                        key-positions = <LM4 LM3>;
                        bindings = <&kp LG(S)>;
                };
                combo_find {         
                        timeout-ms = <20>;
                        key-positions = <LM2 LM1>;
                        bindings = <&kp LG(F)>;
                };
                combo_close_window {
                        timeout-ms = <20>;
                        key-positions = <LT3 LT1>;
                        bindings = <&kp LG(W)>;
                };

                combo_mouse_layer {         
                        timeout-ms = <25>;
                        key-positions = <LH1 RH1>;
                        bindings = <&mo MOUSE>;
                };
        };                      

        keymap {
                compatible = "zmk,keymap";

                base_layer {
                        bindings = <
   &kp TAB           &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &mt LCTRL ESC     &mt LGUI A &mt LALT S &mt LSHFT D &mt LCTRL F &kp G   &kp H &mt RCTRL J &mt RSHFT K &mt RALT L &mt RGUI SEMI &kp SQT
   &kp LSHFT         &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &mt RSHFT DEL
                      &kp LGUI &mo LOWER &kp SPACE   &kp RET &mo RAISE &kp RALT
                        >;      
                };

                lower_layer {
                        bindings = <
   &trans  &kp N1 &kp N2 &kp N3 &kp N4 &kp N5   &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &trans  &kp F1 &kp F2 &kp F3 &kp F4 &kp F5   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &trans  &kp F6 &kp F7 &kp F8 &kp F9 &kp F10  &trans   &trans   &trans &trans    &trans &trans
                         &trans &trans &trans   &trans   &trans   &trans
                        >;
                };

                raise_layer {
                        bindings = <
   &kp GRAVE &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS &kp ASTRK &kp UNDER &kp PLUS  &kp DEL
   &kp TILDE &kp N1   &kp N2 &kp N3   &kp N4   &kp N5      &kp N6    &kp N7   &kp N8    &kp N9    &kp N0    &kp BSLH
   &trans    &kp LPAR &kp RPAR &kp LBKT &kp RBKT &kp LBRC  &kp RBRC  &kp EQUAL &kp MINUS &kp PIPE &kp DQT   &trans
                             &trans   &trans   &trans      &trans    &trans    &trans
                        >;
                };
       
                adjust_layer {
                        bindings = <
   &trans       &trans          &trans              &trans          &trans       &trans         &trans &trans &trans &trans &trans &trans
   &bt BT_CLR   &switch_to_mac  &switch_to_windows  &switch_to_ipad &bt BT_SEL 3 &bt BT_SEL 4   &trans &trans &trans &trans &trans &trans
   &bootloader  &trans          &trans              &trans          &trans       &trans         &trans &trans &trans &trans &trans &bootloader
                                                    &trans          &trans       &trans         &trans &trans &trans
                        >;
                };
                
                mouse_layer {
                        bindings = <
   &trans  &trans &trans &trans &trans &trans      &trans   &trans        &mmv MOVE_UP   &trans         &trans &trans
   &trans  &trans &trans &trans &trans &trans      &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_DOWN &mmv MOVE_RIGHT &trans &trans  
   &trans  &trans &trans &trans &trans &trans      &trans   &mkp MB4      &mkp MB5       &trans         &trans &trans
                         &trans &trans &mkp LCLK   &mkp RCLK &mkp MCLK &trans
                        >;
                };       
        }; 
};
